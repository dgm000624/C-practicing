
AD_Convert.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  00000884  00000918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000884  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080011e  0080011e  00000936  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000936  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000994  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000009d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f6a  00000000  00000000  00000a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a46  00000000  00000000  000019ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000660  00000000  00000000  00002414  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  00002a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a3  00000000  00000000  00002b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000682  00000000  00000000  0000302f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  000036b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	39 c0       	rjmp	.+114    	; 0xc8 <__vector_21>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e8       	ldi	r30, 0x84	; 132
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 31       	cpi	r26, 0x1E	; 30
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ae e1       	ldi	r26, 0x1E	; 30
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 32       	cpi	r26, 0x20	; 32
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	19 d0       	rcall	.+50     	; 0xf6 <main>
  c4:	dd c3       	rjmp	.+1978   	; 0x880 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_21>:
	
	while(1){
		if((ADCSRA&0x10)!=0) break;
	}
	return ADC;
}
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
  d6:	84 b1       	in	r24, 0x04	; 4
  d8:	95 b1       	in	r25, 0x05	; 5
  da:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
  de:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
  e2:	86 b1       	in	r24, 0x06	; 6
  e4:	80 64       	ori	r24, 0x40	; 64
  e6:	86 b9       	out	0x06, r24	; 6
  e8:	9f 91       	pop	r25
  ea:	8f 91       	pop	r24
  ec:	0f 90       	pop	r0
  ee:	0f be       	out	0x3f, r0	; 63
  f0:	0f 90       	pop	r0
  f2:	1f 90       	pop	r1
  f4:	18 95       	reti

000000f6 <main>:
// 	else if(N>150) PORTD = (0x80);
// 	else PORTD = (0x00);
// }

int main(void)
{
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	a8 97       	sbiw	r28, 0x28	; 40
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	f8 94       	cli
 104:	de bf       	out	0x3e, r29	; 62
 106:	0f be       	out	0x3f, r0	; 63
 108:	cd bf       	out	0x3d, r28	; 61

	int Duty = 255;
	
	DDRB |= 0x80;
 10a:	87 b3       	in	r24, 0x17	; 23
 10c:	80 68       	ori	r24, 0x80	; 128
 10e:	87 bb       	out	0x17, r24	; 23
	ASSR = 0;
 110:	10 be       	out	0x30, r1	; 48
	//내부 클럭을 사용할지 비동기 외부 클럭 사용할지 설정
	TCCR2 = 0x6d;											//256분주비											// 255 + 1 _ 0x0f
 112:	8d e6       	ldi	r24, 0x6D	; 109
 114:	85 bd       	out	0x25, r24	; 37
	TIMSK = 0x00;											// 인터럽트 허용
 116:	17 be       	out	0x37, r1	; 55
	TCNT2 = 0x00;
 118:	14 bc       	out	0x24, r1	; 36
	OCR2 = 0;
 11a:	13 bc       	out	0x23, r1	; 35
	TIFR = 0;
 11c:	16 be       	out	0x36, r1	; 54
	
	
	
	//DDRD = 0xff;
	DDRF = 0x00;
 11e:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	
	ADMUX = 0x03;
 122:	83 e0       	ldi	r24, 0x03	; 3
 124:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0x8b;
 126:	8b e8       	ldi	r24, 0x8B	; 139
 128:	86 b9       	out	0x06, r24	; 6
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12a:	81 e3       	ldi	r24, 0x31	; 49
 12c:	8a 95       	dec	r24
 12e:	f1 f7       	brne	.-4      	; 0x12c <main+0x36>
 130:	00 00       	nop
	
	_delay_us(10);
	
	Byte str[20] = "ATmega 128";
 132:	8b e0       	ldi	r24, 0x0B	; 11
 134:	e0 e0       	ldi	r30, 0x00	; 0
 136:	f1 e0       	ldi	r31, 0x01	; 1
 138:	de 01       	movw	r26, r28
 13a:	11 96       	adiw	r26, 0x01	; 1
 13c:	01 90       	ld	r0, Z+
 13e:	0d 92       	st	X+, r0
 140:	8a 95       	dec	r24
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0x46>
 144:	fe 01       	movw	r30, r28
 146:	3c 96       	adiw	r30, 0x0c	; 12
 148:	89 e0       	ldi	r24, 0x09	; 9
 14a:	df 01       	movw	r26, r30
 14c:	1d 92       	st	X+, r1
 14e:	8a 95       	dec	r24
 150:	e9 f7       	brne	.-6      	; 0x14c <main+0x56>
	char str2[20]; 
	
	sei();
 152:	78 94       	sei
	
	ADCSRA |= 0x40;
 154:	86 b1       	in	r24, 0x06	; 6
 156:	80 64       	ori	r24, 0x40	; 64
 158:	86 b9       	out	0x06, r24	; 6
	
	PortInit();
 15a:	2f d0       	rcall	.+94     	; 0x1ba <PortInit>
	LCD_Init();
 15c:	8c d0       	rcall	.+280    	; 0x276 <LCD_Init>
 15e:	60 e0       	ldi	r22, 0x00	; 0
	 
	LCD_pos(0,0);
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	78 d0       	rcall	.+240    	; 0x254 <LCD_pos>
 164:	ce 01       	movw	r24, r28
	LCD_STR(str);
 166:	01 96       	adiw	r24, 0x01	; 1
 168:	69 d0       	rcall	.+210    	; 0x23c <LCD_STR>
 16a:	87 b3       	in	r24, 0x17	; 23
 16c:	80 68       	ori	r24, 0x80	; 128

	

	DDRB |= 0x80;
 16e:	87 bb       	out	0x17, r24	; 23
 170:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <__data_end+0x1>
	

	while (1)
	{
		/*adc_data = read_adc();*/
		sprintf(str2, "ADC : %4d", adc_data);
 174:	8f 93       	push	r24
 176:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 17a:	8f 93       	push	r24
 17c:	84 e1       	ldi	r24, 0x14	; 20
 17e:	91 e0       	ldi	r25, 0x01	; 1
 180:	9f 93       	push	r25
 182:	8f 93       	push	r24
 184:	8e 01       	movw	r16, r28
 186:	0b 5e       	subi	r16, 0xEB	; 235
 188:	1f 4f       	sbci	r17, 0xFF	; 255
 18a:	1f 93       	push	r17
 18c:	0f 93       	push	r16
 18e:	9d d0       	rcall	.+314    	; 0x2ca <sprintf>
 190:	60 e0       	ldi	r22, 0x00	; 0
		LCD_pos(1,0);
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	5f d0       	rcall	.+190    	; 0x254 <LCD_pos>
 196:	c8 01       	movw	r24, r16
 198:	51 d0       	rcall	.+162    	; 0x23c <LCD_STR>
		LCD_STR((Byte*)str2); 
 19a:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 19e:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
/*		LED_censor(adc_data);*/
		Duty = adc_data/4;
 1a2:	96 95       	lsr	r25
 1a4:	87 95       	ror	r24
 1a6:	96 95       	lsr	r25
 1a8:	87 95       	ror	r24
 1aa:	83 bd       	out	0x23, r24	; 35
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
		OCR2 = Duty;
 1b0:	0f 90       	pop	r0
 1b2:	0f 90       	pop	r0
 1b4:	0f 90       	pop	r0
 1b6:	0f 90       	pop	r0
 1b8:	db cf       	rjmp	.-74     	; 0x170 <main+0x7a>

000001ba <PortInit>:
#include <util/delay.h>
#include "LCD.h"

void PortInit(void)
{
	DDRC = 0xFF;	//DDRC로
 1ba:	8f ef       	ldi	r24, 0xFF	; 255
 1bc:	84 bb       	out	0x14, r24	; 20
	DDRB = 0x07;	//DDRB로		RS RW 는 PORTD에
 1be:	87 e0       	ldi	r24, 0x07	; 7
 1c0:	87 bb       	out	0x17, r24	; 23
 1c2:	08 95       	ret

000001c4 <LCD_Data>:
	
}

void LCD_Data(Byte ch)
{
	LCD_CTRL |= (1<<LCD_RS);
 1c4:	98 b3       	in	r25, 0x18	; 24
 1c6:	91 60       	ori	r25, 0x01	; 1
 1c8:	98 bb       	out	0x18, r25	; 24
	LCD_CTRL &= ~(1<<LCD_RW);
 1ca:	98 b3       	in	r25, 0x18	; 24
 1cc:	9d 7f       	andi	r25, 0xFD	; 253
 1ce:	98 bb       	out	0x18, r25	; 24
	LCD_CTRL |= (1<<LCD_EN);
 1d0:	98 b3       	in	r25, 0x18	; 24
 1d2:	94 60       	ori	r25, 0x04	; 4
 1d4:	98 bb       	out	0x18, r25	; 24
 1d6:	e7 ec       	ldi	r30, 0xC7	; 199
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	31 97       	sbiw	r30, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <LCD_Data+0x16>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <LCD_Data+0x1c>
 1e0:	00 00       	nop
	_delay_us(50);
	LCD_WDATA = ch;
 1e2:	85 bb       	out	0x15, r24	; 21
 1e4:	87 ec       	ldi	r24, 0xC7	; 199
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <LCD_Data+0x24>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <LCD_Data+0x2a>
 1ee:	00 00       	nop
	_delay_us(50);
	LCD_CTRL &= ~(1<<LCD_EN);
 1f0:	88 b3       	in	r24, 0x18	; 24
 1f2:	8b 7f       	andi	r24, 0xFB	; 251
 1f4:	88 bb       	out	0x18, r24	; 24
 1f6:	08 95       	ret

000001f8 <LCD_Comm>:
}

void LCD_Comm(Byte ch)
{
	LCD_CTRL &= ~(1<<LCD_RS);
 1f8:	98 b3       	in	r25, 0x18	; 24
 1fa:	9e 7f       	andi	r25, 0xFE	; 254
 1fc:	98 bb       	out	0x18, r25	; 24
	LCD_CTRL &= ~(1<<LCD_RW);
 1fe:	98 b3       	in	r25, 0x18	; 24
 200:	9d 7f       	andi	r25, 0xFD	; 253
 202:	98 bb       	out	0x18, r25	; 24
	LCD_CTRL |= (1<<LCD_EN);
 204:	98 b3       	in	r25, 0x18	; 24
 206:	94 60       	ori	r25, 0x04	; 4
 208:	98 bb       	out	0x18, r25	; 24
 20a:	e7 ec       	ldi	r30, 0xC7	; 199
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	31 97       	sbiw	r30, 0x01	; 1
 210:	f1 f7       	brne	.-4      	; 0x20e <LCD_Comm+0x16>
 212:	00 c0       	rjmp	.+0      	; 0x214 <LCD_Comm+0x1c>
 214:	00 00       	nop
	_delay_us(50);
	LCD_WINST = ch;
 216:	85 bb       	out	0x15, r24	; 21
 218:	87 ec       	ldi	r24, 0xC7	; 199
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	01 97       	sbiw	r24, 0x01	; 1
 21e:	f1 f7       	brne	.-4      	; 0x21c <LCD_Comm+0x24>
 220:	00 c0       	rjmp	.+0      	; 0x222 <LCD_Comm+0x2a>
 222:	00 00       	nop
	_delay_us(50);
	LCD_CTRL &= ~(1<<LCD_EN);
 224:	88 b3       	in	r24, 0x18	; 24
 226:	8b 7f       	andi	r24, 0xFB	; 251
 228:	88 bb       	out	0x18, r24	; 24
 22a:	08 95       	ret

0000022c <LCD_CHAR>:
}

void LCD_CHAR(Byte c)
{
	
	LCD_Data(c);
 22c:	cb df       	rcall	.-106    	; 0x1c4 <LCD_Data>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 22e:	8f e9       	ldi	r24, 0x9F	; 159
 230:	9f e0       	ldi	r25, 0x0F	; 15
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <LCD_CHAR+0x6>
 236:	00 c0       	rjmp	.+0      	; 0x238 <LCD_CHAR+0xc>
 238:	00 00       	nop
 23a:	08 95       	ret

0000023c <LCD_STR>:
	_delay_ms(1);
}

void LCD_STR(Byte *str)
{
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	ec 01       	movw	r28, r24
	while(*str!=0)
 242:	02 c0       	rjmp	.+4      	; 0x248 <LCD_STR+0xc>
	{
		LCD_CHAR(*str);
 244:	f3 df       	rcall	.-26     	; 0x22c <LCD_CHAR>
		str++;
 246:	21 96       	adiw	r28, 0x01	; 1
	_delay_ms(1);
}

void LCD_STR(Byte *str)
{
	while(*str!=0)
 248:	88 81       	ld	r24, Y
 24a:	81 11       	cpse	r24, r1
 24c:	fb cf       	rjmp	.-10     	; 0x244 <LCD_STR+0x8>
	{
		LCD_CHAR(*str);
		str++;
	}
}
 24e:	df 91       	pop	r29
 250:	cf 91       	pop	r28
 252:	08 95       	ret

00000254 <LCD_pos>:

void LCD_pos(unsigned char col, unsigned char row)
{
	
	LCD_Comm(0x80 | (row+col*0x40));
 254:	90 e4       	ldi	r25, 0x40	; 64
 256:	89 9f       	mul	r24, r25
 258:	60 0d       	add	r22, r0
 25a:	11 24       	eor	r1, r1
 25c:	86 2f       	mov	r24, r22
 25e:	80 68       	ori	r24, 0x80	; 128
 260:	cb cf       	rjmp	.-106    	; 0x1f8 <LCD_Comm>
 262:	08 95       	ret

00000264 <LCD_Clear>:
}

void LCD_Clear(void)
{
	LCD_Comm(0x01);
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	c8 df       	rcall	.-112    	; 0x1f8 <LCD_Comm>
 268:	8f e7       	ldi	r24, 0x7F	; 127
 26a:	9e e3       	ldi	r25, 0x3E	; 62
 26c:	01 97       	sbiw	r24, 0x01	; 1
 26e:	f1 f7       	brne	.-4      	; 0x26c <LCD_Clear+0x8>
 270:	00 c0       	rjmp	.+0      	; 0x272 <LCD_Clear+0xe>
 272:	00 00       	nop
 274:	08 95       	ret

00000276 <LCD_Init>:
	_delay_ms(4);
}

void LCD_Init(void)
{
	LCD_Comm(0x38);
 276:	88 e3       	ldi	r24, 0x38	; 56
 278:	bf df       	rcall	.-130    	; 0x1f8 <LCD_Comm>
 27a:	8f e3       	ldi	r24, 0x3F	; 63
 27c:	9f e1       	ldi	r25, 0x1F	; 31
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <LCD_Init+0x8>
 282:	00 c0       	rjmp	.+0      	; 0x284 <LCD_Init+0xe>
 284:	00 00       	nop
	_delay_ms(2);
	LCD_Comm(0x38);
 286:	88 e3       	ldi	r24, 0x38	; 56
 288:	b7 df       	rcall	.-146    	; 0x1f8 <LCD_Comm>
 28a:	8f e3       	ldi	r24, 0x3F	; 63
 28c:	9f e1       	ldi	r25, 0x1F	; 31
 28e:	01 97       	sbiw	r24, 0x01	; 1
 290:	f1 f7       	brne	.-4      	; 0x28e <LCD_Init+0x18>
 292:	00 c0       	rjmp	.+0      	; 0x294 <LCD_Init+0x1e>
	_delay_ms(2);
	LCD_Comm(0x38);
 294:	00 00       	nop
 296:	88 e3       	ldi	r24, 0x38	; 56
 298:	af df       	rcall	.-162    	; 0x1f8 <LCD_Comm>
 29a:	8f e3       	ldi	r24, 0x3F	; 63
 29c:	9f e1       	ldi	r25, 0x1F	; 31
 29e:	01 97       	sbiw	r24, 0x01	; 1
 2a0:	f1 f7       	brne	.-4      	; 0x29e <LCD_Init+0x28>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <LCD_Init+0x2e>
	_delay_ms(2);
	LCD_Comm(0x0e);
 2a4:	00 00       	nop
 2a6:	8e e0       	ldi	r24, 0x0E	; 14
 2a8:	a7 df       	rcall	.-178    	; 0x1f8 <LCD_Comm>
 2aa:	8f e3       	ldi	r24, 0x3F	; 63
 2ac:	9f e1       	ldi	r25, 0x1F	; 31
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <LCD_Init+0x38>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <LCD_Init+0x3e>
	_delay_ms(2);
	LCD_Comm(0x06);
 2b4:	00 00       	nop
 2b6:	86 e0       	ldi	r24, 0x06	; 6
 2b8:	9f df       	rcall	.-194    	; 0x1f8 <LCD_Comm>
 2ba:	8f e3       	ldi	r24, 0x3F	; 63
 2bc:	9f e1       	ldi	r25, 0x1F	; 31
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <LCD_Init+0x48>
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <LCD_Init+0x4e>
	_delay_ms(2);
	LCD_Clear();
 2c4:	00 00       	nop
 2c6:	ce cf       	rjmp	.-100    	; 0x264 <LCD_Clear>
 2c8:	08 95       	ret

000002ca <sprintf>:
 2ca:	0f 93       	push	r16
 2cc:	1f 93       	push	r17
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	cd b7       	in	r28, 0x3d	; 61
 2d4:	de b7       	in	r29, 0x3e	; 62
 2d6:	2e 97       	sbiw	r28, 0x0e	; 14
 2d8:	0f b6       	in	r0, 0x3f	; 63
 2da:	f8 94       	cli
 2dc:	de bf       	out	0x3e, r29	; 62
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	cd bf       	out	0x3d, r28	; 61
 2e2:	0d 89       	ldd	r16, Y+21	; 0x15
 2e4:	1e 89       	ldd	r17, Y+22	; 0x16
 2e6:	86 e0       	ldi	r24, 0x06	; 6
 2e8:	8c 83       	std	Y+4, r24	; 0x04
 2ea:	1a 83       	std	Y+2, r17	; 0x02
 2ec:	09 83       	std	Y+1, r16	; 0x01
 2ee:	8f ef       	ldi	r24, 0xFF	; 255
 2f0:	9f e7       	ldi	r25, 0x7F	; 127
 2f2:	9e 83       	std	Y+6, r25	; 0x06
 2f4:	8d 83       	std	Y+5, r24	; 0x05
 2f6:	ae 01       	movw	r20, r28
 2f8:	47 5e       	subi	r20, 0xE7	; 231
 2fa:	5f 4f       	sbci	r21, 0xFF	; 255
 2fc:	6f 89       	ldd	r22, Y+23	; 0x17
 2fe:	78 8d       	ldd	r23, Y+24	; 0x18
 300:	ce 01       	movw	r24, r28
 302:	01 96       	adiw	r24, 0x01	; 1
 304:	10 d0       	rcall	.+32     	; 0x326 <vfprintf>
 306:	ef 81       	ldd	r30, Y+7	; 0x07
 308:	f8 85       	ldd	r31, Y+8	; 0x08
 30a:	e0 0f       	add	r30, r16
 30c:	f1 1f       	adc	r31, r17
 30e:	10 82       	st	Z, r1
 310:	2e 96       	adiw	r28, 0x0e	; 14
 312:	0f b6       	in	r0, 0x3f	; 63
 314:	f8 94       	cli
 316:	de bf       	out	0x3e, r29	; 62
 318:	0f be       	out	0x3f, r0	; 63
 31a:	cd bf       	out	0x3d, r28	; 61
 31c:	df 91       	pop	r29
 31e:	cf 91       	pop	r28
 320:	1f 91       	pop	r17
 322:	0f 91       	pop	r16
 324:	08 95       	ret

00000326 <vfprintf>:
 326:	2f 92       	push	r2
 328:	3f 92       	push	r3
 32a:	4f 92       	push	r4
 32c:	5f 92       	push	r5
 32e:	6f 92       	push	r6
 330:	7f 92       	push	r7
 332:	8f 92       	push	r8
 334:	9f 92       	push	r9
 336:	af 92       	push	r10
 338:	bf 92       	push	r11
 33a:	cf 92       	push	r12
 33c:	df 92       	push	r13
 33e:	ef 92       	push	r14
 340:	ff 92       	push	r15
 342:	0f 93       	push	r16
 344:	1f 93       	push	r17
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	cd b7       	in	r28, 0x3d	; 61
 34c:	de b7       	in	r29, 0x3e	; 62
 34e:	2b 97       	sbiw	r28, 0x0b	; 11
 350:	0f b6       	in	r0, 0x3f	; 63
 352:	f8 94       	cli
 354:	de bf       	out	0x3e, r29	; 62
 356:	0f be       	out	0x3f, r0	; 63
 358:	cd bf       	out	0x3d, r28	; 61
 35a:	6c 01       	movw	r12, r24
 35c:	7b 01       	movw	r14, r22
 35e:	8a 01       	movw	r16, r20
 360:	fc 01       	movw	r30, r24
 362:	17 82       	std	Z+7, r1	; 0x07
 364:	16 82       	std	Z+6, r1	; 0x06
 366:	83 81       	ldd	r24, Z+3	; 0x03
 368:	81 ff       	sbrs	r24, 1
 36a:	bf c1       	rjmp	.+894    	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 36c:	ce 01       	movw	r24, r28
 36e:	01 96       	adiw	r24, 0x01	; 1
 370:	3c 01       	movw	r6, r24
 372:	f6 01       	movw	r30, r12
 374:	93 81       	ldd	r25, Z+3	; 0x03
 376:	f7 01       	movw	r30, r14
 378:	93 fd       	sbrc	r25, 3
 37a:	85 91       	lpm	r24, Z+
 37c:	93 ff       	sbrs	r25, 3
 37e:	81 91       	ld	r24, Z+
 380:	7f 01       	movw	r14, r30
 382:	88 23       	and	r24, r24
 384:	09 f4       	brne	.+2      	; 0x388 <vfprintf+0x62>
 386:	ad c1       	rjmp	.+858    	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 388:	85 32       	cpi	r24, 0x25	; 37
 38a:	39 f4       	brne	.+14     	; 0x39a <vfprintf+0x74>
 38c:	93 fd       	sbrc	r25, 3
 38e:	85 91       	lpm	r24, Z+
 390:	93 ff       	sbrs	r25, 3
 392:	81 91       	ld	r24, Z+
 394:	7f 01       	movw	r14, r30
 396:	85 32       	cpi	r24, 0x25	; 37
 398:	21 f4       	brne	.+8      	; 0x3a2 <vfprintf+0x7c>
 39a:	b6 01       	movw	r22, r12
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	d6 d1       	rcall	.+940    	; 0x74c <fputc>
 3a0:	e8 cf       	rjmp	.-48     	; 0x372 <vfprintf+0x4c>
 3a2:	91 2c       	mov	r9, r1
 3a4:	21 2c       	mov	r2, r1
 3a6:	31 2c       	mov	r3, r1
 3a8:	ff e1       	ldi	r31, 0x1F	; 31
 3aa:	f3 15       	cp	r31, r3
 3ac:	d8 f0       	brcs	.+54     	; 0x3e4 <vfprintf+0xbe>
 3ae:	8b 32       	cpi	r24, 0x2B	; 43
 3b0:	79 f0       	breq	.+30     	; 0x3d0 <vfprintf+0xaa>
 3b2:	38 f4       	brcc	.+14     	; 0x3c2 <vfprintf+0x9c>
 3b4:	80 32       	cpi	r24, 0x20	; 32
 3b6:	79 f0       	breq	.+30     	; 0x3d6 <vfprintf+0xb0>
 3b8:	83 32       	cpi	r24, 0x23	; 35
 3ba:	a1 f4       	brne	.+40     	; 0x3e4 <vfprintf+0xbe>
 3bc:	23 2d       	mov	r18, r3
 3be:	20 61       	ori	r18, 0x10	; 16
 3c0:	1d c0       	rjmp	.+58     	; 0x3fc <vfprintf+0xd6>
 3c2:	8d 32       	cpi	r24, 0x2D	; 45
 3c4:	61 f0       	breq	.+24     	; 0x3de <vfprintf+0xb8>
 3c6:	80 33       	cpi	r24, 0x30	; 48
 3c8:	69 f4       	brne	.+26     	; 0x3e4 <vfprintf+0xbe>
 3ca:	23 2d       	mov	r18, r3
 3cc:	21 60       	ori	r18, 0x01	; 1
 3ce:	16 c0       	rjmp	.+44     	; 0x3fc <vfprintf+0xd6>
 3d0:	83 2d       	mov	r24, r3
 3d2:	82 60       	ori	r24, 0x02	; 2
 3d4:	38 2e       	mov	r3, r24
 3d6:	e3 2d       	mov	r30, r3
 3d8:	e4 60       	ori	r30, 0x04	; 4
 3da:	3e 2e       	mov	r3, r30
 3dc:	2a c0       	rjmp	.+84     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 3de:	f3 2d       	mov	r31, r3
 3e0:	f8 60       	ori	r31, 0x08	; 8
 3e2:	1d c0       	rjmp	.+58     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3e4:	37 fc       	sbrc	r3, 7
 3e6:	2d c0       	rjmp	.+90     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3e8:	20 ed       	ldi	r18, 0xD0	; 208
 3ea:	28 0f       	add	r18, r24
 3ec:	2a 30       	cpi	r18, 0x0A	; 10
 3ee:	40 f0       	brcs	.+16     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f0:	8e 32       	cpi	r24, 0x2E	; 46
 3f2:	b9 f4       	brne	.+46     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3f4:	36 fc       	sbrc	r3, 6
 3f6:	75 c1       	rjmp	.+746    	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 3f8:	23 2d       	mov	r18, r3
 3fa:	20 64       	ori	r18, 0x40	; 64
 3fc:	32 2e       	mov	r3, r18
 3fe:	19 c0       	rjmp	.+50     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 400:	36 fe       	sbrs	r3, 6
 402:	06 c0       	rjmp	.+12     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 404:	8a e0       	ldi	r24, 0x0A	; 10
 406:	98 9e       	mul	r9, r24
 408:	20 0d       	add	r18, r0
 40a:	11 24       	eor	r1, r1
 40c:	92 2e       	mov	r9, r18
 40e:	11 c0       	rjmp	.+34     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 410:	ea e0       	ldi	r30, 0x0A	; 10
 412:	2e 9e       	mul	r2, r30
 414:	20 0d       	add	r18, r0
 416:	11 24       	eor	r1, r1
 418:	22 2e       	mov	r2, r18
 41a:	f3 2d       	mov	r31, r3
 41c:	f0 62       	ori	r31, 0x20	; 32
 41e:	3f 2e       	mov	r3, r31
 420:	08 c0       	rjmp	.+16     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 422:	8c 36       	cpi	r24, 0x6C	; 108
 424:	21 f4       	brne	.+8      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 426:	83 2d       	mov	r24, r3
 428:	80 68       	ori	r24, 0x80	; 128
 42a:	38 2e       	mov	r3, r24
 42c:	02 c0       	rjmp	.+4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42e:	88 36       	cpi	r24, 0x68	; 104
 430:	41 f4       	brne	.+16     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 432:	f7 01       	movw	r30, r14
 434:	93 fd       	sbrc	r25, 3
 436:	85 91       	lpm	r24, Z+
 438:	93 ff       	sbrs	r25, 3
 43a:	81 91       	ld	r24, Z+
 43c:	7f 01       	movw	r14, r30
 43e:	81 11       	cpse	r24, r1
 440:	b3 cf       	rjmp	.-154    	; 0x3a8 <vfprintf+0x82>
 442:	98 2f       	mov	r25, r24
 444:	9f 7d       	andi	r25, 0xDF	; 223
 446:	95 54       	subi	r25, 0x45	; 69
 448:	93 30       	cpi	r25, 0x03	; 3
 44a:	28 f4       	brcc	.+10     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 44c:	0c 5f       	subi	r16, 0xFC	; 252
 44e:	1f 4f       	sbci	r17, 0xFF	; 255
 450:	9f e3       	ldi	r25, 0x3F	; 63
 452:	99 83       	std	Y+1, r25	; 0x01
 454:	0d c0       	rjmp	.+26     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 456:	83 36       	cpi	r24, 0x63	; 99
 458:	31 f0       	breq	.+12     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 45a:	83 37       	cpi	r24, 0x73	; 115
 45c:	71 f0       	breq	.+28     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 45e:	83 35       	cpi	r24, 0x53	; 83
 460:	09 f0       	breq	.+2      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 462:	55 c0       	rjmp	.+170    	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 464:	20 c0       	rjmp	.+64     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 466:	f8 01       	movw	r30, r16
 468:	80 81       	ld	r24, Z
 46a:	89 83       	std	Y+1, r24	; 0x01
 46c:	0e 5f       	subi	r16, 0xFE	; 254
 46e:	1f 4f       	sbci	r17, 0xFF	; 255
 470:	88 24       	eor	r8, r8
 472:	83 94       	inc	r8
 474:	91 2c       	mov	r9, r1
 476:	53 01       	movw	r10, r6
 478:	12 c0       	rjmp	.+36     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 47a:	28 01       	movw	r4, r16
 47c:	f2 e0       	ldi	r31, 0x02	; 2
 47e:	4f 0e       	add	r4, r31
 480:	51 1c       	adc	r5, r1
 482:	f8 01       	movw	r30, r16
 484:	a0 80       	ld	r10, Z
 486:	b1 80       	ldd	r11, Z+1	; 0x01
 488:	36 fe       	sbrs	r3, 6
 48a:	03 c0       	rjmp	.+6      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48c:	69 2d       	mov	r22, r9
 48e:	70 e0       	ldi	r23, 0x00	; 0
 490:	02 c0       	rjmp	.+4      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 492:	6f ef       	ldi	r22, 0xFF	; 255
 494:	7f ef       	ldi	r23, 0xFF	; 255
 496:	c5 01       	movw	r24, r10
 498:	4e d1       	rcall	.+668    	; 0x736 <strnlen>
 49a:	4c 01       	movw	r8, r24
 49c:	82 01       	movw	r16, r4
 49e:	f3 2d       	mov	r31, r3
 4a0:	ff 77       	andi	r31, 0x7F	; 127
 4a2:	3f 2e       	mov	r3, r31
 4a4:	15 c0       	rjmp	.+42     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4a6:	28 01       	movw	r4, r16
 4a8:	22 e0       	ldi	r18, 0x02	; 2
 4aa:	42 0e       	add	r4, r18
 4ac:	51 1c       	adc	r5, r1
 4ae:	f8 01       	movw	r30, r16
 4b0:	a0 80       	ld	r10, Z
 4b2:	b1 80       	ldd	r11, Z+1	; 0x01
 4b4:	36 fe       	sbrs	r3, 6
 4b6:	03 c0       	rjmp	.+6      	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b8:	69 2d       	mov	r22, r9
 4ba:	70 e0       	ldi	r23, 0x00	; 0
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4be:	6f ef       	ldi	r22, 0xFF	; 255
 4c0:	7f ef       	ldi	r23, 0xFF	; 255
 4c2:	c5 01       	movw	r24, r10
 4c4:	2d d1       	rcall	.+602    	; 0x720 <strnlen_P>
 4c6:	4c 01       	movw	r8, r24
 4c8:	f3 2d       	mov	r31, r3
 4ca:	f0 68       	ori	r31, 0x80	; 128
 4cc:	3f 2e       	mov	r3, r31
 4ce:	82 01       	movw	r16, r4
 4d0:	33 fc       	sbrc	r3, 3
 4d2:	19 c0       	rjmp	.+50     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4d4:	82 2d       	mov	r24, r2
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	88 16       	cp	r8, r24
 4da:	99 06       	cpc	r9, r25
 4dc:	a0 f4       	brcc	.+40     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4de:	b6 01       	movw	r22, r12
 4e0:	80 e2       	ldi	r24, 0x20	; 32
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	33 d1       	rcall	.+614    	; 0x74c <fputc>
 4e6:	2a 94       	dec	r2
 4e8:	f5 cf       	rjmp	.-22     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4ea:	f5 01       	movw	r30, r10
 4ec:	37 fc       	sbrc	r3, 7
 4ee:	85 91       	lpm	r24, Z+
 4f0:	37 fe       	sbrs	r3, 7
 4f2:	81 91       	ld	r24, Z+
 4f4:	5f 01       	movw	r10, r30
 4f6:	b6 01       	movw	r22, r12
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	28 d1       	rcall	.+592    	; 0x74c <fputc>
 4fc:	21 10       	cpse	r2, r1
 4fe:	2a 94       	dec	r2
 500:	21 e0       	ldi	r18, 0x01	; 1
 502:	82 1a       	sub	r8, r18
 504:	91 08       	sbc	r9, r1
 506:	81 14       	cp	r8, r1
 508:	91 04       	cpc	r9, r1
 50a:	79 f7       	brne	.-34     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 50c:	e1 c0       	rjmp	.+450    	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 50e:	84 36       	cpi	r24, 0x64	; 100
 510:	11 f0       	breq	.+4      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 512:	89 36       	cpi	r24, 0x69	; 105
 514:	39 f5       	brne	.+78     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 516:	f8 01       	movw	r30, r16
 518:	37 fe       	sbrs	r3, 7
 51a:	07 c0       	rjmp	.+14     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 51c:	60 81       	ld	r22, Z
 51e:	71 81       	ldd	r23, Z+1	; 0x01
 520:	82 81       	ldd	r24, Z+2	; 0x02
 522:	93 81       	ldd	r25, Z+3	; 0x03
 524:	0c 5f       	subi	r16, 0xFC	; 252
 526:	1f 4f       	sbci	r17, 0xFF	; 255
 528:	08 c0       	rjmp	.+16     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 52a:	60 81       	ld	r22, Z
 52c:	71 81       	ldd	r23, Z+1	; 0x01
 52e:	07 2e       	mov	r0, r23
 530:	00 0c       	add	r0, r0
 532:	88 0b       	sbc	r24, r24
 534:	99 0b       	sbc	r25, r25
 536:	0e 5f       	subi	r16, 0xFE	; 254
 538:	1f 4f       	sbci	r17, 0xFF	; 255
 53a:	f3 2d       	mov	r31, r3
 53c:	ff 76       	andi	r31, 0x6F	; 111
 53e:	3f 2e       	mov	r3, r31
 540:	97 ff       	sbrs	r25, 7
 542:	09 c0       	rjmp	.+18     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 544:	90 95       	com	r25
 546:	80 95       	com	r24
 548:	70 95       	com	r23
 54a:	61 95       	neg	r22
 54c:	7f 4f       	sbci	r23, 0xFF	; 255
 54e:	8f 4f       	sbci	r24, 0xFF	; 255
 550:	9f 4f       	sbci	r25, 0xFF	; 255
 552:	f0 68       	ori	r31, 0x80	; 128
 554:	3f 2e       	mov	r3, r31
 556:	2a e0       	ldi	r18, 0x0A	; 10
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	a3 01       	movw	r20, r6
 55c:	33 d1       	rcall	.+614    	; 0x7c4 <__ultoa_invert>
 55e:	88 2e       	mov	r8, r24
 560:	86 18       	sub	r8, r6
 562:	44 c0       	rjmp	.+136    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 564:	85 37       	cpi	r24, 0x75	; 117
 566:	31 f4       	brne	.+12     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 568:	23 2d       	mov	r18, r3
 56a:	2f 7e       	andi	r18, 0xEF	; 239
 56c:	b2 2e       	mov	r11, r18
 56e:	2a e0       	ldi	r18, 0x0A	; 10
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	25 c0       	rjmp	.+74     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 574:	93 2d       	mov	r25, r3
 576:	99 7f       	andi	r25, 0xF9	; 249
 578:	b9 2e       	mov	r11, r25
 57a:	8f 36       	cpi	r24, 0x6F	; 111
 57c:	c1 f0       	breq	.+48     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 57e:	18 f4       	brcc	.+6      	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 580:	88 35       	cpi	r24, 0x58	; 88
 582:	79 f0       	breq	.+30     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 584:	ae c0       	rjmp	.+348    	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 586:	80 37       	cpi	r24, 0x70	; 112
 588:	19 f0       	breq	.+6      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 58a:	88 37       	cpi	r24, 0x78	; 120
 58c:	21 f0       	breq	.+8      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 58e:	a9 c0       	rjmp	.+338    	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 590:	e9 2f       	mov	r30, r25
 592:	e0 61       	ori	r30, 0x10	; 16
 594:	be 2e       	mov	r11, r30
 596:	b4 fe       	sbrs	r11, 4
 598:	0d c0       	rjmp	.+26     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 59a:	fb 2d       	mov	r31, r11
 59c:	f4 60       	ori	r31, 0x04	; 4
 59e:	bf 2e       	mov	r11, r31
 5a0:	09 c0       	rjmp	.+18     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a2:	34 fe       	sbrs	r3, 4
 5a4:	0a c0       	rjmp	.+20     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5a6:	29 2f       	mov	r18, r25
 5a8:	26 60       	ori	r18, 0x06	; 6
 5aa:	b2 2e       	mov	r11, r18
 5ac:	06 c0       	rjmp	.+12     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5ae:	28 e0       	ldi	r18, 0x08	; 8
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	05 c0       	rjmp	.+10     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5b4:	20 e1       	ldi	r18, 0x10	; 16
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5ba:	20 e1       	ldi	r18, 0x10	; 16
 5bc:	32 e0       	ldi	r19, 0x02	; 2
 5be:	f8 01       	movw	r30, r16
 5c0:	b7 fe       	sbrs	r11, 7
 5c2:	07 c0       	rjmp	.+14     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5c4:	60 81       	ld	r22, Z
 5c6:	71 81       	ldd	r23, Z+1	; 0x01
 5c8:	82 81       	ldd	r24, Z+2	; 0x02
 5ca:	93 81       	ldd	r25, Z+3	; 0x03
 5cc:	0c 5f       	subi	r16, 0xFC	; 252
 5ce:	1f 4f       	sbci	r17, 0xFF	; 255
 5d0:	06 c0       	rjmp	.+12     	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5d2:	60 81       	ld	r22, Z
 5d4:	71 81       	ldd	r23, Z+1	; 0x01
 5d6:	80 e0       	ldi	r24, 0x00	; 0
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 5f       	subi	r16, 0xFE	; 254
 5dc:	1f 4f       	sbci	r17, 0xFF	; 255
 5de:	a3 01       	movw	r20, r6
 5e0:	f1 d0       	rcall	.+482    	; 0x7c4 <__ultoa_invert>
 5e2:	88 2e       	mov	r8, r24
 5e4:	86 18       	sub	r8, r6
 5e6:	fb 2d       	mov	r31, r11
 5e8:	ff 77       	andi	r31, 0x7F	; 127
 5ea:	3f 2e       	mov	r3, r31
 5ec:	36 fe       	sbrs	r3, 6
 5ee:	0d c0       	rjmp	.+26     	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 5f0:	23 2d       	mov	r18, r3
 5f2:	2e 7f       	andi	r18, 0xFE	; 254
 5f4:	a2 2e       	mov	r10, r18
 5f6:	89 14       	cp	r8, r9
 5f8:	58 f4       	brcc	.+22     	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 5fa:	34 fe       	sbrs	r3, 4
 5fc:	0b c0       	rjmp	.+22     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 5fe:	32 fc       	sbrc	r3, 2
 600:	09 c0       	rjmp	.+18     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 602:	83 2d       	mov	r24, r3
 604:	8e 7e       	andi	r24, 0xEE	; 238
 606:	a8 2e       	mov	r10, r24
 608:	05 c0       	rjmp	.+10     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 60a:	b8 2c       	mov	r11, r8
 60c:	a3 2c       	mov	r10, r3
 60e:	03 c0       	rjmp	.+6      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 610:	b8 2c       	mov	r11, r8
 612:	01 c0       	rjmp	.+2      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 614:	b9 2c       	mov	r11, r9
 616:	a4 fe       	sbrs	r10, 4
 618:	0f c0       	rjmp	.+30     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 61a:	fe 01       	movw	r30, r28
 61c:	e8 0d       	add	r30, r8
 61e:	f1 1d       	adc	r31, r1
 620:	80 81       	ld	r24, Z
 622:	80 33       	cpi	r24, 0x30	; 48
 624:	21 f4       	brne	.+8      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 626:	9a 2d       	mov	r25, r10
 628:	99 7e       	andi	r25, 0xE9	; 233
 62a:	a9 2e       	mov	r10, r25
 62c:	09 c0       	rjmp	.+18     	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 62e:	a2 fe       	sbrs	r10, 2
 630:	06 c0       	rjmp	.+12     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 632:	b3 94       	inc	r11
 634:	b3 94       	inc	r11
 636:	04 c0       	rjmp	.+8      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 638:	8a 2d       	mov	r24, r10
 63a:	86 78       	andi	r24, 0x86	; 134
 63c:	09 f0       	breq	.+2      	; 0x640 <__LOCK_REGION_LENGTH__+0x240>
 63e:	b3 94       	inc	r11
 640:	a3 fc       	sbrc	r10, 3
 642:	10 c0       	rjmp	.+32     	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 644:	a0 fe       	sbrs	r10, 0
 646:	06 c0       	rjmp	.+12     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 648:	b2 14       	cp	r11, r2
 64a:	80 f4       	brcc	.+32     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 64c:	28 0c       	add	r2, r8
 64e:	92 2c       	mov	r9, r2
 650:	9b 18       	sub	r9, r11
 652:	0d c0       	rjmp	.+26     	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 654:	b2 14       	cp	r11, r2
 656:	58 f4       	brcc	.+22     	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 658:	b6 01       	movw	r22, r12
 65a:	80 e2       	ldi	r24, 0x20	; 32
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	76 d0       	rcall	.+236    	; 0x74c <fputc>
 660:	b3 94       	inc	r11
 662:	f8 cf       	rjmp	.-16     	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 664:	b2 14       	cp	r11, r2
 666:	18 f4       	brcc	.+6      	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 668:	2b 18       	sub	r2, r11
 66a:	02 c0       	rjmp	.+4      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 66c:	98 2c       	mov	r9, r8
 66e:	21 2c       	mov	r2, r1
 670:	a4 fe       	sbrs	r10, 4
 672:	0f c0       	rjmp	.+30     	; 0x692 <__LOCK_REGION_LENGTH__+0x292>
 674:	b6 01       	movw	r22, r12
 676:	80 e3       	ldi	r24, 0x30	; 48
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	68 d0       	rcall	.+208    	; 0x74c <fputc>
 67c:	a2 fe       	sbrs	r10, 2
 67e:	16 c0       	rjmp	.+44     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 680:	a1 fc       	sbrc	r10, 1
 682:	03 c0       	rjmp	.+6      	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 684:	88 e7       	ldi	r24, 0x78	; 120
 686:	90 e0       	ldi	r25, 0x00	; 0
 688:	02 c0       	rjmp	.+4      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
 68a:	88 e5       	ldi	r24, 0x58	; 88
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	b6 01       	movw	r22, r12
 690:	0c c0       	rjmp	.+24     	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 692:	8a 2d       	mov	r24, r10
 694:	86 78       	andi	r24, 0x86	; 134
 696:	51 f0       	breq	.+20     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 698:	a1 fe       	sbrs	r10, 1
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 69c:	8b e2       	ldi	r24, 0x2B	; 43
 69e:	01 c0       	rjmp	.+2      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 6a0:	80 e2       	ldi	r24, 0x20	; 32
 6a2:	a7 fc       	sbrc	r10, 7
 6a4:	8d e2       	ldi	r24, 0x2D	; 45
 6a6:	b6 01       	movw	r22, r12
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	50 d0       	rcall	.+160    	; 0x74c <fputc>
 6ac:	89 14       	cp	r8, r9
 6ae:	30 f4       	brcc	.+12     	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 6b0:	b6 01       	movw	r22, r12
 6b2:	80 e3       	ldi	r24, 0x30	; 48
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	4a d0       	rcall	.+148    	; 0x74c <fputc>
 6b8:	9a 94       	dec	r9
 6ba:	f8 cf       	rjmp	.-16     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 6bc:	8a 94       	dec	r8
 6be:	f3 01       	movw	r30, r6
 6c0:	e8 0d       	add	r30, r8
 6c2:	f1 1d       	adc	r31, r1
 6c4:	80 81       	ld	r24, Z
 6c6:	b6 01       	movw	r22, r12
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	40 d0       	rcall	.+128    	; 0x74c <fputc>
 6cc:	81 10       	cpse	r8, r1
 6ce:	f6 cf       	rjmp	.-20     	; 0x6bc <__LOCK_REGION_LENGTH__+0x2bc>
 6d0:	22 20       	and	r2, r2
 6d2:	09 f4       	brne	.+2      	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6d4:	4e ce       	rjmp	.-868    	; 0x372 <vfprintf+0x4c>
 6d6:	b6 01       	movw	r22, r12
 6d8:	80 e2       	ldi	r24, 0x20	; 32
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	37 d0       	rcall	.+110    	; 0x74c <fputc>
 6de:	2a 94       	dec	r2
 6e0:	f7 cf       	rjmp	.-18     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6e2:	f6 01       	movw	r30, r12
 6e4:	86 81       	ldd	r24, Z+6	; 0x06
 6e6:	97 81       	ldd	r25, Z+7	; 0x07
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <__LOCK_REGION_LENGTH__+0x2ee>
 6ea:	8f ef       	ldi	r24, 0xFF	; 255
 6ec:	9f ef       	ldi	r25, 0xFF	; 255
 6ee:	2b 96       	adiw	r28, 0x0b	; 11
 6f0:	0f b6       	in	r0, 0x3f	; 63
 6f2:	f8 94       	cli
 6f4:	de bf       	out	0x3e, r29	; 62
 6f6:	0f be       	out	0x3f, r0	; 63
 6f8:	cd bf       	out	0x3d, r28	; 61
 6fa:	df 91       	pop	r29
 6fc:	cf 91       	pop	r28
 6fe:	1f 91       	pop	r17
 700:	0f 91       	pop	r16
 702:	ff 90       	pop	r15
 704:	ef 90       	pop	r14
 706:	df 90       	pop	r13
 708:	cf 90       	pop	r12
 70a:	bf 90       	pop	r11
 70c:	af 90       	pop	r10
 70e:	9f 90       	pop	r9
 710:	8f 90       	pop	r8
 712:	7f 90       	pop	r7
 714:	6f 90       	pop	r6
 716:	5f 90       	pop	r5
 718:	4f 90       	pop	r4
 71a:	3f 90       	pop	r3
 71c:	2f 90       	pop	r2
 71e:	08 95       	ret

00000720 <strnlen_P>:
 720:	fc 01       	movw	r30, r24
 722:	05 90       	lpm	r0, Z+
 724:	61 50       	subi	r22, 0x01	; 1
 726:	70 40       	sbci	r23, 0x00	; 0
 728:	01 10       	cpse	r0, r1
 72a:	d8 f7       	brcc	.-10     	; 0x722 <strnlen_P+0x2>
 72c:	80 95       	com	r24
 72e:	90 95       	com	r25
 730:	8e 0f       	add	r24, r30
 732:	9f 1f       	adc	r25, r31
 734:	08 95       	ret

00000736 <strnlen>:
 736:	fc 01       	movw	r30, r24
 738:	61 50       	subi	r22, 0x01	; 1
 73a:	70 40       	sbci	r23, 0x00	; 0
 73c:	01 90       	ld	r0, Z+
 73e:	01 10       	cpse	r0, r1
 740:	d8 f7       	brcc	.-10     	; 0x738 <strnlen+0x2>
 742:	80 95       	com	r24
 744:	90 95       	com	r25
 746:	8e 0f       	add	r24, r30
 748:	9f 1f       	adc	r25, r31
 74a:	08 95       	ret

0000074c <fputc>:
 74c:	0f 93       	push	r16
 74e:	1f 93       	push	r17
 750:	cf 93       	push	r28
 752:	df 93       	push	r29
 754:	fb 01       	movw	r30, r22
 756:	23 81       	ldd	r18, Z+3	; 0x03
 758:	21 fd       	sbrc	r18, 1
 75a:	03 c0       	rjmp	.+6      	; 0x762 <fputc+0x16>
 75c:	8f ef       	ldi	r24, 0xFF	; 255
 75e:	9f ef       	ldi	r25, 0xFF	; 255
 760:	2c c0       	rjmp	.+88     	; 0x7ba <fputc+0x6e>
 762:	22 ff       	sbrs	r18, 2
 764:	16 c0       	rjmp	.+44     	; 0x792 <fputc+0x46>
 766:	46 81       	ldd	r20, Z+6	; 0x06
 768:	57 81       	ldd	r21, Z+7	; 0x07
 76a:	24 81       	ldd	r18, Z+4	; 0x04
 76c:	35 81       	ldd	r19, Z+5	; 0x05
 76e:	42 17       	cp	r20, r18
 770:	53 07       	cpc	r21, r19
 772:	44 f4       	brge	.+16     	; 0x784 <fputc+0x38>
 774:	a0 81       	ld	r26, Z
 776:	b1 81       	ldd	r27, Z+1	; 0x01
 778:	9d 01       	movw	r18, r26
 77a:	2f 5f       	subi	r18, 0xFF	; 255
 77c:	3f 4f       	sbci	r19, 0xFF	; 255
 77e:	31 83       	std	Z+1, r19	; 0x01
 780:	20 83       	st	Z, r18
 782:	8c 93       	st	X, r24
 784:	26 81       	ldd	r18, Z+6	; 0x06
 786:	37 81       	ldd	r19, Z+7	; 0x07
 788:	2f 5f       	subi	r18, 0xFF	; 255
 78a:	3f 4f       	sbci	r19, 0xFF	; 255
 78c:	37 83       	std	Z+7, r19	; 0x07
 78e:	26 83       	std	Z+6, r18	; 0x06
 790:	14 c0       	rjmp	.+40     	; 0x7ba <fputc+0x6e>
 792:	8b 01       	movw	r16, r22
 794:	ec 01       	movw	r28, r24
 796:	fb 01       	movw	r30, r22
 798:	00 84       	ldd	r0, Z+8	; 0x08
 79a:	f1 85       	ldd	r31, Z+9	; 0x09
 79c:	e0 2d       	mov	r30, r0
 79e:	09 95       	icall
 7a0:	89 2b       	or	r24, r25
 7a2:	e1 f6       	brne	.-72     	; 0x75c <fputc+0x10>
 7a4:	d8 01       	movw	r26, r16
 7a6:	16 96       	adiw	r26, 0x06	; 6
 7a8:	8d 91       	ld	r24, X+
 7aa:	9c 91       	ld	r25, X
 7ac:	17 97       	sbiw	r26, 0x07	; 7
 7ae:	01 96       	adiw	r24, 0x01	; 1
 7b0:	17 96       	adiw	r26, 0x07	; 7
 7b2:	9c 93       	st	X, r25
 7b4:	8e 93       	st	-X, r24
 7b6:	16 97       	sbiw	r26, 0x06	; 6
 7b8:	ce 01       	movw	r24, r28
 7ba:	df 91       	pop	r29
 7bc:	cf 91       	pop	r28
 7be:	1f 91       	pop	r17
 7c0:	0f 91       	pop	r16
 7c2:	08 95       	ret

000007c4 <__ultoa_invert>:
 7c4:	fa 01       	movw	r30, r20
 7c6:	aa 27       	eor	r26, r26
 7c8:	28 30       	cpi	r18, 0x08	; 8
 7ca:	51 f1       	breq	.+84     	; 0x820 <__ultoa_invert+0x5c>
 7cc:	20 31       	cpi	r18, 0x10	; 16
 7ce:	81 f1       	breq	.+96     	; 0x830 <__ultoa_invert+0x6c>
 7d0:	e8 94       	clt
 7d2:	6f 93       	push	r22
 7d4:	6e 7f       	andi	r22, 0xFE	; 254
 7d6:	6e 5f       	subi	r22, 0xFE	; 254
 7d8:	7f 4f       	sbci	r23, 0xFF	; 255
 7da:	8f 4f       	sbci	r24, 0xFF	; 255
 7dc:	9f 4f       	sbci	r25, 0xFF	; 255
 7de:	af 4f       	sbci	r26, 0xFF	; 255
 7e0:	b1 e0       	ldi	r27, 0x01	; 1
 7e2:	3e d0       	rcall	.+124    	; 0x860 <__ultoa_invert+0x9c>
 7e4:	b4 e0       	ldi	r27, 0x04	; 4
 7e6:	3c d0       	rcall	.+120    	; 0x860 <__ultoa_invert+0x9c>
 7e8:	67 0f       	add	r22, r23
 7ea:	78 1f       	adc	r23, r24
 7ec:	89 1f       	adc	r24, r25
 7ee:	9a 1f       	adc	r25, r26
 7f0:	a1 1d       	adc	r26, r1
 7f2:	68 0f       	add	r22, r24
 7f4:	79 1f       	adc	r23, r25
 7f6:	8a 1f       	adc	r24, r26
 7f8:	91 1d       	adc	r25, r1
 7fa:	a1 1d       	adc	r26, r1
 7fc:	6a 0f       	add	r22, r26
 7fe:	71 1d       	adc	r23, r1
 800:	81 1d       	adc	r24, r1
 802:	91 1d       	adc	r25, r1
 804:	a1 1d       	adc	r26, r1
 806:	20 d0       	rcall	.+64     	; 0x848 <__ultoa_invert+0x84>
 808:	09 f4       	brne	.+2      	; 0x80c <__ultoa_invert+0x48>
 80a:	68 94       	set
 80c:	3f 91       	pop	r19
 80e:	2a e0       	ldi	r18, 0x0A	; 10
 810:	26 9f       	mul	r18, r22
 812:	11 24       	eor	r1, r1
 814:	30 19       	sub	r19, r0
 816:	30 5d       	subi	r19, 0xD0	; 208
 818:	31 93       	st	Z+, r19
 81a:	de f6       	brtc	.-74     	; 0x7d2 <__ultoa_invert+0xe>
 81c:	cf 01       	movw	r24, r30
 81e:	08 95       	ret
 820:	46 2f       	mov	r20, r22
 822:	47 70       	andi	r20, 0x07	; 7
 824:	40 5d       	subi	r20, 0xD0	; 208
 826:	41 93       	st	Z+, r20
 828:	b3 e0       	ldi	r27, 0x03	; 3
 82a:	0f d0       	rcall	.+30     	; 0x84a <__ultoa_invert+0x86>
 82c:	c9 f7       	brne	.-14     	; 0x820 <__ultoa_invert+0x5c>
 82e:	f6 cf       	rjmp	.-20     	; 0x81c <__ultoa_invert+0x58>
 830:	46 2f       	mov	r20, r22
 832:	4f 70       	andi	r20, 0x0F	; 15
 834:	40 5d       	subi	r20, 0xD0	; 208
 836:	4a 33       	cpi	r20, 0x3A	; 58
 838:	18 f0       	brcs	.+6      	; 0x840 <__ultoa_invert+0x7c>
 83a:	49 5d       	subi	r20, 0xD9	; 217
 83c:	31 fd       	sbrc	r19, 1
 83e:	40 52       	subi	r20, 0x20	; 32
 840:	41 93       	st	Z+, r20
 842:	02 d0       	rcall	.+4      	; 0x848 <__ultoa_invert+0x84>
 844:	a9 f7       	brne	.-22     	; 0x830 <__ultoa_invert+0x6c>
 846:	ea cf       	rjmp	.-44     	; 0x81c <__ultoa_invert+0x58>
 848:	b4 e0       	ldi	r27, 0x04	; 4
 84a:	a6 95       	lsr	r26
 84c:	97 95       	ror	r25
 84e:	87 95       	ror	r24
 850:	77 95       	ror	r23
 852:	67 95       	ror	r22
 854:	ba 95       	dec	r27
 856:	c9 f7       	brne	.-14     	; 0x84a <__ultoa_invert+0x86>
 858:	00 97       	sbiw	r24, 0x00	; 0
 85a:	61 05       	cpc	r22, r1
 85c:	71 05       	cpc	r23, r1
 85e:	08 95       	ret
 860:	9b 01       	movw	r18, r22
 862:	ac 01       	movw	r20, r24
 864:	0a 2e       	mov	r0, r26
 866:	06 94       	lsr	r0
 868:	57 95       	ror	r21
 86a:	47 95       	ror	r20
 86c:	37 95       	ror	r19
 86e:	27 95       	ror	r18
 870:	ba 95       	dec	r27
 872:	c9 f7       	brne	.-14     	; 0x866 <__ultoa_invert+0xa2>
 874:	62 0f       	add	r22, r18
 876:	73 1f       	adc	r23, r19
 878:	84 1f       	adc	r24, r20
 87a:	95 1f       	adc	r25, r21
 87c:	a0 1d       	adc	r26, r0
 87e:	08 95       	ret

00000880 <_exit>:
 880:	f8 94       	cli

00000882 <__stop_program>:
 882:	ff cf       	rjmp	.-2      	; 0x882 <__stop_program>
