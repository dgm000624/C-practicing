
input.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  0000042c  000004c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000042c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800114  00800114  000004d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000504  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c04  00000000  00000000  00000574  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000875  00000000  00000000  00001178  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000046a  00000000  00000000  000019ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00001e58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000429  00000000  00000000  00001eac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000719  00000000  00000000  000022d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000029ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4f c0       	rjmp	.+158    	; 0xa0 <__ctors_end>
   2:	00 00       	nop
   4:	6a c0       	rjmp	.+212    	; 0xda <__bad_interrupt>
   6:	00 00       	nop
   8:	68 c0       	rjmp	.+208    	; 0xda <__bad_interrupt>
   a:	00 00       	nop
   c:	66 c0       	rjmp	.+204    	; 0xda <__bad_interrupt>
   e:	00 00       	nop
  10:	64 c0       	rjmp	.+200    	; 0xda <__bad_interrupt>
  12:	00 00       	nop
  14:	62 c0       	rjmp	.+196    	; 0xda <__bad_interrupt>
  16:	00 00       	nop
  18:	60 c0       	rjmp	.+192    	; 0xda <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5e c0       	rjmp	.+188    	; 0xda <__bad_interrupt>
  1e:	00 00       	nop
  20:	5c c0       	rjmp	.+184    	; 0xda <__bad_interrupt>
  22:	00 00       	nop
  24:	5a c0       	rjmp	.+180    	; 0xda <__bad_interrupt>
  26:	00 00       	nop
  28:	58 c0       	rjmp	.+176    	; 0xda <__bad_interrupt>
  2a:	00 00       	nop
  2c:	56 c0       	rjmp	.+172    	; 0xda <__bad_interrupt>
  2e:	00 00       	nop
  30:	54 c0       	rjmp	.+168    	; 0xda <__bad_interrupt>
  32:	00 00       	nop
  34:	52 c0       	rjmp	.+164    	; 0xda <__bad_interrupt>
  36:	00 00       	nop
  38:	50 c0       	rjmp	.+160    	; 0xda <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4e c0       	rjmp	.+156    	; 0xda <__bad_interrupt>
  3e:	00 00       	nop
  40:	4c c0       	rjmp	.+152    	; 0xda <__bad_interrupt>
  42:	00 00       	nop
  44:	4a c0       	rjmp	.+148    	; 0xda <__bad_interrupt>
  46:	00 00       	nop
  48:	48 c0       	rjmp	.+144    	; 0xda <__bad_interrupt>
  4a:	00 00       	nop
  4c:	46 c0       	rjmp	.+140    	; 0xda <__bad_interrupt>
  4e:	00 00       	nop
  50:	44 c0       	rjmp	.+136    	; 0xda <__bad_interrupt>
  52:	00 00       	nop
  54:	42 c0       	rjmp	.+132    	; 0xda <__bad_interrupt>
  56:	00 00       	nop
  58:	40 c0       	rjmp	.+128    	; 0xda <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3e c0       	rjmp	.+124    	; 0xda <__bad_interrupt>
  5e:	00 00       	nop
  60:	3c c0       	rjmp	.+120    	; 0xda <__bad_interrupt>
  62:	00 00       	nop
  64:	3a c0       	rjmp	.+116    	; 0xda <__bad_interrupt>
  66:	00 00       	nop
  68:	38 c0       	rjmp	.+112    	; 0xda <__bad_interrupt>
  6a:	00 00       	nop
  6c:	36 c0       	rjmp	.+108    	; 0xda <__bad_interrupt>
  6e:	00 00       	nop
  70:	34 c0       	rjmp	.+104    	; 0xda <__bad_interrupt>
  72:	00 00       	nop
  74:	32 c0       	rjmp	.+100    	; 0xda <__bad_interrupt>
  76:	00 00       	nop
  78:	30 c0       	rjmp	.+96     	; 0xda <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2e c0       	rjmp	.+92     	; 0xda <__bad_interrupt>
  7e:	00 00       	nop
  80:	2c c0       	rjmp	.+88     	; 0xda <__bad_interrupt>
  82:	00 00       	nop
  84:	2a c0       	rjmp	.+84     	; 0xda <__bad_interrupt>
  86:	00 00       	nop
  88:	28 c0       	rjmp	.+80     	; 0xda <__bad_interrupt>
  8a:	00 00       	nop
  8c:	76 00       	.word	0x0076	; ????
  8e:	81 00       	.word	0x0081	; ????
  90:	8c 00       	.word	0x008c	; ????
  92:	97 00       	.word	0x0097	; ????
  94:	a2 00       	.word	0x00a2	; ????
  96:	ad 00       	.word	0x00ad	; ????
  98:	b8 00       	.word	0x00b8	; ????
  9a:	c3 00       	.word	0x00c3	; ????
  9c:	ce 00       	.word	0x00ce	; ????
  9e:	d9 00       	.word	0x00d9	; ????

000000a0 <__ctors_end>:
  a0:	11 24       	eor	r1, r1
  a2:	1f be       	out	0x3f, r1	; 63
  a4:	cf ef       	ldi	r28, 0xFF	; 255
  a6:	d0 e1       	ldi	r29, 0x10	; 16
  a8:	de bf       	out	0x3e, r29	; 62
  aa:	cd bf       	out	0x3d, r28	; 61

000000ac <__do_copy_data>:
  ac:	11 e0       	ldi	r17, 0x01	; 1
  ae:	a0 e0       	ldi	r26, 0x00	; 0
  b0:	b1 e0       	ldi	r27, 0x01	; 1
  b2:	ec e2       	ldi	r30, 0x2C	; 44
  b4:	f4 e0       	ldi	r31, 0x04	; 4
  b6:	00 e0       	ldi	r16, 0x00	; 0
  b8:	0b bf       	out	0x3b, r16	; 59
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x14>
  bc:	07 90       	elpm	r0, Z+
  be:	0d 92       	st	X+, r0
  c0:	a4 31       	cpi	r26, 0x14	; 20
  c2:	b1 07       	cpc	r27, r17
  c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0x10>

000000c6 <__do_clear_bss>:
  c6:	21 e0       	ldi	r18, 0x01	; 1
  c8:	a4 e1       	ldi	r26, 0x14	; 20
  ca:	b1 e0       	ldi	r27, 0x01	; 1
  cc:	01 c0       	rjmp	.+2      	; 0xd0 <.do_clear_bss_start>

000000ce <.do_clear_bss_loop>:
  ce:	1d 92       	st	X+, r1

000000d0 <.do_clear_bss_start>:
  d0:	a6 31       	cpi	r26, 0x16	; 22
  d2:	b2 07       	cpc	r27, r18
  d4:	e1 f7       	brne	.-8      	; 0xce <.do_clear_bss_loop>
  d6:	e3 d0       	rcall	.+454    	; 0x29e <main>
  d8:	a7 c1       	rjmp	.+846    	; 0x428 <_exit>

000000da <__bad_interrupt>:
  da:	92 cf       	rjmp	.-220    	; 0x0 <__vectors>

000000dc <switchs>:
}

void switchs(int temp)
{
	
	switch(temp)
  dc:	8a 30       	cpi	r24, 0x0A	; 10
  de:	91 05       	cpc	r25, r1
  e0:	08 f0       	brcs	.+2      	; 0xe4 <switchs+0x8>
  e2:	71 c0       	rjmp	.+226    	; 0x1c6 <switchs+0xea>
  e4:	fc 01       	movw	r30, r24
  e6:	ea 5b       	subi	r30, 0xBA	; 186
  e8:	ff 4f       	sbci	r31, 0xFF	; 255
  ea:	81 c1       	rjmp	.+770    	; 0x3ee <__tablejump2__>
		case 0x20: PORTE = ~Font[6];  break;
		case 0x40: PORTE = ~Font[7];  break;
		case 0x80: total = 0; PORTE = ;  break;
		default : break;
		*/
		case 0: PORTE = ~Font[0]; _delay_ms(5); break;
  ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  f0:	80 95       	com	r24
  f2:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f4:	8f e1       	ldi	r24, 0x1F	; 31
  f6:	9e e4       	ldi	r25, 0x4E	; 78
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <switchs+0x1c>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <switchs+0x22>
  fe:	00 00       	nop
 100:	08 95       	ret
		case 1: PORTE = ~Font[1]; _delay_ms(5); break;
 102:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 106:	80 95       	com	r24
 108:	83 b9       	out	0x03, r24	; 3
 10a:	8f e1       	ldi	r24, 0x1F	; 31
 10c:	9e e4       	ldi	r25, 0x4E	; 78
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <switchs+0x32>
 112:	00 c0       	rjmp	.+0      	; 0x114 <switchs+0x38>
 114:	00 00       	nop
 116:	08 95       	ret
		case 2: PORTE = ~Font[2]; _delay_ms(5); break;
 118:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
 11c:	80 95       	com	r24
 11e:	83 b9       	out	0x03, r24	; 3
 120:	8f e1       	ldi	r24, 0x1F	; 31
 122:	9e e4       	ldi	r25, 0x4E	; 78
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <switchs+0x48>
 128:	00 c0       	rjmp	.+0      	; 0x12a <switchs+0x4e>
 12a:	00 00       	nop
 12c:	08 95       	ret
		case 3: PORTE = ~Font[3]; _delay_ms(5); break;
 12e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
 132:	80 95       	com	r24
 134:	83 b9       	out	0x03, r24	; 3
 136:	8f e1       	ldi	r24, 0x1F	; 31
 138:	9e e4       	ldi	r25, 0x4E	; 78
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <switchs+0x5e>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <switchs+0x64>
 140:	00 00       	nop
 142:	08 95       	ret
		case 4: PORTE = ~Font[4]; _delay_ms(5); break;
 144:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
 148:	80 95       	com	r24
 14a:	83 b9       	out	0x03, r24	; 3
 14c:	8f e1       	ldi	r24, 0x1F	; 31
 14e:	9e e4       	ldi	r25, 0x4E	; 78
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <switchs+0x74>
 154:	00 c0       	rjmp	.+0      	; 0x156 <switchs+0x7a>
 156:	00 00       	nop
 158:	08 95       	ret
		case 5: PORTE = ~Font[5]; _delay_ms(5); break;
 15a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
 15e:	80 95       	com	r24
 160:	83 b9       	out	0x03, r24	; 3
 162:	8f e1       	ldi	r24, 0x1F	; 31
 164:	9e e4       	ldi	r25, 0x4E	; 78
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <switchs+0x8a>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <switchs+0x90>
 16c:	00 00       	nop
 16e:	08 95       	ret
		case 6: PORTE = ~Font[6]; _delay_ms(5); break;
 170:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
 174:	80 95       	com	r24
 176:	83 b9       	out	0x03, r24	; 3
 178:	8f e1       	ldi	r24, 0x1F	; 31
 17a:	9e e4       	ldi	r25, 0x4E	; 78
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <switchs+0xa0>
 180:	00 c0       	rjmp	.+0      	; 0x182 <switchs+0xa6>
 182:	00 00       	nop
 184:	08 95       	ret
		case 7: PORTE = ~Font[7]; _delay_ms(5);  break;
 186:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__DATA_REGION_ORIGIN__+0xe>
 18a:	80 95       	com	r24
 18c:	83 b9       	out	0x03, r24	; 3
 18e:	8f e1       	ldi	r24, 0x1F	; 31
 190:	9e e4       	ldi	r25, 0x4E	; 78
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <switchs+0xb6>
 196:	00 c0       	rjmp	.+0      	; 0x198 <switchs+0xbc>
 198:	00 00       	nop
 19a:	08 95       	ret
		case 8: PORTE = ~Font[8]; _delay_ms(5); break;
 19c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__DATA_REGION_ORIGIN__+0x10>
 1a0:	80 95       	com	r24
 1a2:	83 b9       	out	0x03, r24	; 3
 1a4:	8f e1       	ldi	r24, 0x1F	; 31
 1a6:	9e e4       	ldi	r25, 0x4E	; 78
 1a8:	01 97       	sbiw	r24, 0x01	; 1
 1aa:	f1 f7       	brne	.-4      	; 0x1a8 <switchs+0xcc>
 1ac:	00 c0       	rjmp	.+0      	; 0x1ae <switchs+0xd2>
 1ae:	00 00       	nop
 1b0:	08 95       	ret
		case 9: PORTE = ~Font[9]; _delay_ms(5); break;
 1b2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__DATA_REGION_ORIGIN__+0x12>
 1b6:	80 95       	com	r24
 1b8:	83 b9       	out	0x03, r24	; 3
 1ba:	8f e1       	ldi	r24, 0x1F	; 31
 1bc:	9e e4       	ldi	r25, 0x4E	; 78
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <switchs+0xe2>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <switchs+0xe8>
 1c4:	00 00       	nop
 1c6:	08 95       	ret

000001c8 <switchs2>:
	}
	
}
void switchs2(int temp)
{
	switch(temp)
 1c8:	88 30       	cpi	r24, 0x08	; 8
 1ca:	91 05       	cpc	r25, r1
 1cc:	d1 f1       	breq	.+116    	; 0x242 <switchs2+0x7a>
 1ce:	54 f4       	brge	.+20     	; 0x1e4 <switchs2+0x1c>
 1d0:	82 30       	cpi	r24, 0x02	; 2
 1d2:	91 05       	cpc	r25, r1
 1d4:	11 f1       	breq	.+68     	; 0x21a <switchs2+0x52>
 1d6:	84 30       	cpi	r24, 0x04	; 4
 1d8:	91 05       	cpc	r25, r1
 1da:	49 f1       	breq	.+82     	; 0x22e <switchs2+0x66>
 1dc:	01 97       	sbiw	r24, 0x01	; 1
 1de:	09 f0       	breq	.+2      	; 0x1e2 <switchs2+0x1a>
 1e0:	5d c0       	rjmp	.+186    	; 0x29c <switchs2+0xd4>
 1e2:	11 c0       	rjmp	.+34     	; 0x206 <switchs2+0x3e>
 1e4:	80 32       	cpi	r24, 0x20	; 32
 1e6:	91 05       	cpc	r25, r1
 1e8:	09 f4       	brne	.+2      	; 0x1ec <switchs2+0x24>
 1ea:	3f c0       	rjmp	.+126    	; 0x26a <switchs2+0xa2>
 1ec:	1c f4       	brge	.+6      	; 0x1f4 <switchs2+0x2c>
 1ee:	40 97       	sbiw	r24, 0x10	; 16
 1f0:	91 f1       	breq	.+100    	; 0x256 <switchs2+0x8e>
 1f2:	08 95       	ret
 1f4:	80 34       	cpi	r24, 0x40	; 64
 1f6:	91 05       	cpc	r25, r1
 1f8:	09 f4       	brne	.+2      	; 0x1fc <switchs2+0x34>
 1fa:	41 c0       	rjmp	.+130    	; 0x27e <switchs2+0xb6>
 1fc:	80 38       	cpi	r24, 0x80	; 128
 1fe:	91 05       	cpc	r25, r1
 200:	09 f4       	brne	.+2      	; 0x204 <switchs2+0x3c>
 202:	47 c0       	rjmp	.+142    	; 0x292 <switchs2+0xca>
 204:	08 95       	ret
	{
		case 0x01: total += 1;  break;
 206:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 20a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 20e:	01 96       	adiw	r24, 0x01	; 1
 210:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 214:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 218:	08 95       	ret
		case 0x02: total += 2;  break;
 21a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 21e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 222:	02 96       	adiw	r24, 0x02	; 2
 224:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 228:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 22c:	08 95       	ret
		case 0x04: total += 3;  break;
 22e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 232:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 236:	03 96       	adiw	r24, 0x03	; 3
 238:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 23c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 240:	08 95       	ret
		case 0x08: total += 4;  break;
 242:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 246:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 24a:	04 96       	adiw	r24, 0x04	; 4
 24c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 250:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 254:	08 95       	ret
		case 0x10: total += 5;  break;
 256:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 25a:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 25e:	05 96       	adiw	r24, 0x05	; 5
 260:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 264:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 268:	08 95       	ret
		case 0x20: total += 6;  break;
 26a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 26e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 272:	06 96       	adiw	r24, 0x06	; 6
 274:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 278:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 27c:	08 95       	ret
		case 0x40: total += 7;  break;
 27e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
 282:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
 286:	07 96       	adiw	r24, 0x07	; 7
 288:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 28c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 290:	08 95       	ret
		case 0x80: total = 0; PORTE = 0x00;  break;
 292:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <__data_end+0x1>
 296:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
 29a:	13 b8       	out	0x03, r1	; 3
 29c:	08 95       	ret

0000029e <main>:
unsigned int Font[10] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90};
	
int total;

int main(void)
{
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
 2a6:	29 97       	sbiw	r28, 0x09	; 9
 2a8:	0f b6       	in	r0, 0x3f	; 63
 2aa:	f8 94       	cli
 2ac:	de bf       	out	0x3e, r29	; 62
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	cd bf       	out	0x3d, r28	; 61
    DDRE = 0xff;		//출력포트
 2b2:	8f ef       	ldi	r24, 0xFF	; 255
 2b4:	82 b9       	out	0x02, r24	; 2
	DDRG = 0x08;
 2b6:	88 e0       	ldi	r24, 0x08	; 8
 2b8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRD = 0x00;		//입력포트
 2bc:	11 ba       	out	0x11, r1	; 17
	
	total = 0;
 2be:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <__data_end+0x1>
 2c2:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
	int amt1 = 0; 
	int amt2 = 0; 
	int amt3 = 0; 
	int amt4 = 0; 
	
	int prev = 0;
 2c6:	80 e0       	ldi	r24, 0x00	; 0
 2c8:	90 e0       	ldi	r25, 0x00	; 0
	total = 0;
	
	int amt1 = 0; 
	int amt2 = 0; 
	int amt3 = 0; 
	int amt4 = 0; 
 2ca:	1e 82       	std	Y+6, r1	; 0x06
 2cc:	1d 82       	std	Y+5, r1	; 0x05
	
	total = 0;
	
	int amt1 = 0; 
	int amt2 = 0; 
	int amt3 = 0; 
 2ce:	c1 2c       	mov	r12, r1
 2d0:	d1 2c       	mov	r13, r1
	DDRD = 0x00;		//입력포트
	
	total = 0;
	
	int amt1 = 0; 
	int amt2 = 0; 
 2d2:	1c 82       	std	Y+4, r1	; 0x04
 2d4:	1b 82       	std	Y+3, r1	; 0x03
	DDRG = 0x08;
	DDRD = 0x00;		//입력포트
	
	total = 0;
	
	int amt1 = 0; 
 2d6:	1a 82       	std	Y+2, r1	; 0x02
 2d8:	19 82       	std	Y+1, r1	; 0x01
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <main+0x42>
 2dc:	88 85       	ldd	r24, Y+8	; 0x08
 2de:	99 85       	ldd	r25, Y+9	; 0x09
	
    while (1) 
    {
		//PORTE = 0x00000000;
		
		int temp = PIND;
 2e0:	20 b3       	in	r18, 0x10	; 16
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	39 87       	std	Y+9, r19	; 0x09
 2e6:	28 87       	std	Y+8, r18	; 0x08
		
		if (prev != temp)
 2e8:	82 17       	cp	r24, r18
 2ea:	93 07       	cpc	r25, r19
 2ec:	11 f0       	breq	.+4      	; 0x2f2 <main+0x54>
		{
			switchs2(temp);
 2ee:	c9 01       	movw	r24, r18
 2f0:	6b df       	rcall	.-298    	; 0x1c8 <switchs2>
		}
		
		
		
		int a = (total / 1000) % 10;
 2f2:	e0 91 14 01 	lds	r30, 0x0114	; 0x800114 <__data_end>
 2f6:	f0 91 15 01 	lds	r31, 0x0115	; 0x800115 <__data_end+0x1>
 2fa:	cf 01       	movw	r24, r30
 2fc:	68 ee       	ldi	r22, 0xE8	; 232
 2fe:	73 e0       	ldi	r23, 0x03	; 3
 300:	63 d0       	rcall	.+198    	; 0x3c8 <__divmodhi4>
 302:	cb 01       	movw	r24, r22
 304:	2a e0       	ldi	r18, 0x0A	; 10
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	b9 01       	movw	r22, r18
 30a:	5e d0       	rcall	.+188    	; 0x3c8 <__divmodhi4>
 30c:	4c 01       	movw	r8, r24
		int b = (total / 100) % 10;
 30e:	cf 01       	movw	r24, r30
 310:	64 e6       	ldi	r22, 0x64	; 100
 312:	70 e0       	ldi	r23, 0x00	; 0
 314:	59 d0       	rcall	.+178    	; 0x3c8 <__divmodhi4>
 316:	cb 01       	movw	r24, r22
 318:	b9 01       	movw	r22, r18
 31a:	56 d0       	rcall	.+172    	; 0x3c8 <__divmodhi4>
 31c:	68 2e       	mov	r6, r24
 31e:	79 2e       	mov	r7, r25
 320:	e8 2e       	mov	r14, r24
		int c = (total / 10) % 10; 
 322:	f9 2e       	mov	r15, r25
 324:	cf 01       	movw	r24, r30
 326:	b9 01       	movw	r22, r18
 328:	4f d0       	rcall	.+158    	; 0x3c8 <__divmodhi4>
 32a:	48 2e       	mov	r4, r24
 32c:	59 2e       	mov	r5, r25
 32e:	cb 01       	movw	r24, r22
 330:	b9 01       	movw	r22, r18
 332:	4a d0       	rcall	.+148    	; 0x3c8 <__divmodhi4>
 334:	28 2e       	mov	r2, r24
 336:	39 2e       	mov	r3, r25
 338:	a8 2e       	mov	r10, r24
 33a:	b9 2e       	mov	r11, r25
		int d = total % 10;
 33c:	04 2d       	mov	r16, r4
 33e:	15 2d       	mov	r17, r5
		
		
		
		
		if ((a>=1)||(amt1==1))
 340:	18 14       	cp	r1, r8
 342:	19 04       	cpc	r1, r9
 344:	24 f0       	brlt	.+8      	; 0x34e <main+0xb0>
 346:	89 81       	ldd	r24, Y+1	; 0x01
 348:	9a 81       	ldd	r25, Y+2	; 0x02
 34a:	01 97       	sbiw	r24, 0x01	; 1
		{
			DDRG = 0x01;
 34c:	49 f4       	brne	.+18     	; 0x360 <main+0xc2>
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
			switchs(a);
 354:	c4 01       	movw	r24, r8
 356:	c2 de       	rcall	.-636    	; 0xdc <switchs>
			amt1 = 1;
 358:	21 e0       	ldi	r18, 0x01	; 1
 35a:	30 e0       	ldi	r19, 0x00	; 0
 35c:	3a 83       	std	Y+2, r19	; 0x02
 35e:	29 83       	std	Y+1, r18	; 0x01
		}
		if ((b>=1)||(amt2==1))
 360:	1e 14       	cp	r1, r14
 362:	1f 04       	cpc	r1, r15
 364:	24 f0       	brlt	.+8      	; 0x36e <main+0xd0>
 366:	8b 81       	ldd	r24, Y+3	; 0x03
 368:	9c 81       	ldd	r25, Y+4	; 0x04
 36a:	01 97       	sbiw	r24, 0x01	; 1
		{
			DDRG = 0x02;
 36c:	51 f4       	brne	.+20     	; 0x382 <main+0xe4>
 36e:	82 e0       	ldi	r24, 0x02	; 2
 370:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
			switchs(b);
 374:	86 2d       	mov	r24, r6
 376:	97 2d       	mov	r25, r7
 378:	b1 de       	rcall	.-670    	; 0xdc <switchs>
			amt2 = 1;
 37a:	21 e0       	ldi	r18, 0x01	; 1
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	3c 83       	std	Y+4, r19	; 0x04
 380:	2b 83       	std	Y+3, r18	; 0x03
		}
		if ((c>=1)||(amt3==1))
 382:	1a 14       	cp	r1, r10
 384:	1b 04       	cpc	r1, r11
 386:	24 f0       	brlt	.+8      	; 0x390 <main+0xf2>
 388:	31 e0       	ldi	r19, 0x01	; 1
 38a:	c3 16       	cp	r12, r19
 38c:	d1 04       	cpc	r13, r1
		{
			DDRG = 0x04;
 38e:	49 f4       	brne	.+18     	; 0x3a2 <main+0x104>
 390:	84 e0       	ldi	r24, 0x04	; 4
 392:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
			switchs(c);
 396:	82 2d       	mov	r24, r2
 398:	93 2d       	mov	r25, r3
 39a:	a0 de       	rcall	.-704    	; 0xdc <switchs>
			amt3 = 1;
 39c:	cc 24       	eor	r12, r12
 39e:	c3 94       	inc	r12
 3a0:	d1 2c       	mov	r13, r1
		}
		if ((d>=1)||(amt4==1))
 3a2:	10 16       	cp	r1, r16
 3a4:	11 06       	cpc	r1, r17
 3a6:	2c f0       	brlt	.+10     	; 0x3b2 <main+0x114>
 3a8:	8d 81       	ldd	r24, Y+5	; 0x05
 3aa:	9e 81       	ldd	r25, Y+6	; 0x06
 3ac:	01 97       	sbiw	r24, 0x01	; 1
 3ae:	09 f0       	breq	.+2      	; 0x3b2 <main+0x114>
		{
			DDRG = 0x08;
 3b0:	95 cf       	rjmp	.-214    	; 0x2dc <main+0x3e>
 3b2:	88 e0       	ldi	r24, 0x08	; 8
 3b4:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
			switchs(d);
 3b8:	84 2d       	mov	r24, r4
 3ba:	95 2d       	mov	r25, r5
 3bc:	8f de       	rcall	.-738    	; 0xdc <switchs>
			amt4 = 1;
 3be:	21 e0       	ldi	r18, 0x01	; 1
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	3e 83       	std	Y+6, r19	; 0x06
 3c4:	2d 83       	std	Y+5, r18	; 0x05
 3c6:	8a cf       	rjmp	.-236    	; 0x2dc <main+0x3e>

000003c8 <__divmodhi4>:
 3c8:	97 fb       	bst	r25, 7
 3ca:	07 2e       	mov	r0, r23
 3cc:	16 f4       	brtc	.+4      	; 0x3d2 <__divmodhi4+0xa>
 3ce:	00 94       	com	r0
 3d0:	06 d0       	rcall	.+12     	; 0x3de <__divmodhi4_neg1>
 3d2:	77 fd       	sbrc	r23, 7
 3d4:	08 d0       	rcall	.+16     	; 0x3e6 <__divmodhi4_neg2>
 3d6:	14 d0       	rcall	.+40     	; 0x400 <__udivmodhi4>
 3d8:	07 fc       	sbrc	r0, 7
 3da:	05 d0       	rcall	.+10     	; 0x3e6 <__divmodhi4_neg2>
 3dc:	3e f4       	brtc	.+14     	; 0x3ec <__divmodhi4_exit>

000003de <__divmodhi4_neg1>:
 3de:	90 95       	com	r25
 3e0:	81 95       	neg	r24
 3e2:	9f 4f       	sbci	r25, 0xFF	; 255
 3e4:	08 95       	ret

000003e6 <__divmodhi4_neg2>:
 3e6:	70 95       	com	r23
 3e8:	61 95       	neg	r22
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255

000003ec <__divmodhi4_exit>:
 3ec:	08 95       	ret

000003ee <__tablejump2__>:
 3ee:	ee 0f       	add	r30, r30
 3f0:	ff 1f       	adc	r31, r31
 3f2:	00 24       	eor	r0, r0
 3f4:	00 1c       	adc	r0, r0
 3f6:	0b be       	out	0x3b, r0	; 59
 3f8:	07 90       	elpm	r0, Z+
 3fa:	f6 91       	elpm	r31, Z
 3fc:	e0 2d       	mov	r30, r0
 3fe:	09 94       	ijmp

00000400 <__udivmodhi4>:
 400:	aa 1b       	sub	r26, r26
 402:	bb 1b       	sub	r27, r27
 404:	51 e1       	ldi	r21, 0x11	; 17
 406:	07 c0       	rjmp	.+14     	; 0x416 <__udivmodhi4_ep>

00000408 <__udivmodhi4_loop>:
 408:	aa 1f       	adc	r26, r26
 40a:	bb 1f       	adc	r27, r27
 40c:	a6 17       	cp	r26, r22
 40e:	b7 07       	cpc	r27, r23
 410:	10 f0       	brcs	.+4      	; 0x416 <__udivmodhi4_ep>
 412:	a6 1b       	sub	r26, r22
 414:	b7 0b       	sbc	r27, r23

00000416 <__udivmodhi4_ep>:
 416:	88 1f       	adc	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	5a 95       	dec	r21
 41c:	a9 f7       	brne	.-22     	; 0x408 <__udivmodhi4_loop>
 41e:	80 95       	com	r24
 420:	90 95       	com	r25
 422:	bc 01       	movw	r22, r24
 424:	cd 01       	movw	r24, r26
 426:	08 95       	ret

00000428 <_exit>:
 428:	f8 94       	cli

0000042a <__stop_program>:
 42a:	ff cf       	rjmp	.-2      	; 0x42a <__stop_program>
