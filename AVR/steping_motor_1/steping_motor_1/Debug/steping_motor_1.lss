
steping_motor_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000019c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000148  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001cc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a31  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007f4  00000000  00000000  00000c5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000032b  00000000  00000000  00001451  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000177c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ff  00000000  00000000  000017a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000268  00000000  00000000  00001b9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001e07  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	54 c0       	rjmp	.+168    	; 0x144 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
    DDRD = 0x00;
  9e:	11 ba       	out	0x11, r1	; 17
	DDRD |= 0x0f;
  a0:	81 b3       	in	r24, 0x11	; 17
  a2:	8f 60       	ori	r24, 0x0F	; 15
  a4:	81 bb       	out	0x11, r24	; 17
	DDRA = 0x0c;
  a6:	8c e0       	ldi	r24, 0x0C	; 12
  a8:	8a bb       	out	0x1a, r24	; 26
	
	
	
	PORTD = 0x00;
  aa:	12 ba       	out	0x12, r1	; 18
    while (1) 
    {
		PORTD = 0x01;
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b0:	8f e3       	ldi	r24, 0x3F	; 63
  b2:	9c e9       	ldi	r25, 0x9C	; 156
  b4:	01 97       	sbiw	r24, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <main+0x16>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x1c>
  ba:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x02;
  bc:	82 e0       	ldi	r24, 0x02	; 2
  be:	82 bb       	out	0x12, r24	; 18
  c0:	8f e3       	ldi	r24, 0x3F	; 63
  c2:	9c e9       	ldi	r25, 0x9C	; 156
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <main+0x26>
  c8:	00 c0       	rjmp	.+0      	; 0xca <main+0x2c>
  ca:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x04;
  cc:	84 e0       	ldi	r24, 0x04	; 4
  ce:	82 bb       	out	0x12, r24	; 18
  d0:	8f e3       	ldi	r24, 0x3F	; 63
  d2:	9c e9       	ldi	r25, 0x9C	; 156
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <main+0x36>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x3c>
  da:	00 00       	nop
		_delay_ms(10);
		PORTD = 0x08;
  dc:	88 e0       	ldi	r24, 0x08	; 8
  de:	82 bb       	out	0x12, r24	; 18
  e0:	8f e3       	ldi	r24, 0x3F	; 63
  e2:	9c e9       	ldi	r25, 0x9C	; 156
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <main+0x46>
  e8:	00 c0       	rjmp	.+0      	; 0xea <main+0x4c>
  ea:	00 00       	nop
		_delay_ms(10);
		
		int temp = PINA;
  ec:	89 b3       	in	r24, 0x19	; 25
  ee:	90 e0       	ldi	r25, 0x00	; 0
		if(temp==0x01)
  f0:	81 30       	cpi	r24, 0x01	; 1
  f2:	91 05       	cpc	r25, r1
  f4:	09 f5       	brne	.+66     	; 0x138 <main+0x9a>
		{
			PORTD = 0x08;
  f6:	88 e0       	ldi	r24, 0x08	; 8
  f8:	82 bb       	out	0x12, r24	; 18
  fa:	8f e3       	ldi	r24, 0x3F	; 63
  fc:	9c e9       	ldi	r25, 0x9C	; 156
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x60>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x66>
 104:	00 00       	nop
			_delay_ms(10);
			PORTD = 0x04;
 106:	84 e0       	ldi	r24, 0x04	; 4
 108:	82 bb       	out	0x12, r24	; 18
 10a:	8f e3       	ldi	r24, 0x3F	; 63
 10c:	9c e9       	ldi	r25, 0x9C	; 156
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0x70>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0x76>
 114:	00 00       	nop
			_delay_ms(10);
			PORTD = 0x02;
 116:	82 e0       	ldi	r24, 0x02	; 2
 118:	82 bb       	out	0x12, r24	; 18
 11a:	8f e3       	ldi	r24, 0x3F	; 63
 11c:	9c e9       	ldi	r25, 0x9C	; 156
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <main+0x80>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x86>
 124:	00 00       	nop
			_delay_ms(10);
			PORTD = 0x01;
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	82 bb       	out	0x12, r24	; 18
 12a:	8f e3       	ldi	r24, 0x3F	; 63
 12c:	9c e9       	ldi	r25, 0x9C	; 156
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <main+0x90>
 132:	00 c0       	rjmp	.+0      	; 0x134 <main+0x96>
 134:	00 00       	nop
 136:	ba cf       	rjmp	.-140    	; 0xac <main+0xe>
			_delay_ms(10);
		}
		else if(temp==0x02)
 138:	02 97       	sbiw	r24, 0x02	; 2
 13a:	09 f0       	breq	.+2      	; 0x13e <main+0xa0>
 13c:	b7 cf       	rjmp	.-146    	; 0xac <main+0xe>
		{
			{
				PORTD &= 0;
 13e:	82 b3       	in	r24, 0x12	; 18
 140:	12 ba       	out	0x12, r1	; 18
 142:	b4 cf       	rjmp	.-152    	; 0xac <main+0xe>

00000144 <_exit>:
 144:	f8 94       	cli

00000146 <__stop_program>:
 146:	ff cf       	rjmp	.-2      	; 0x146 <__stop_program>
